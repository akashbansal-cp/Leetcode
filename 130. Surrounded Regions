//https://leetcode.com/problems/surrounded-regions/
class Solution {
private:
    void refill(vector<vector<char>> &board,int i,int j){
        if(i<0 || i>board.size()-1 || j<0 || j>board[0].size()-1)
            return ;
        if(board[i][j]!='O')
            return ;
        if(board[i][j]=='O'){
            board[i][j]='-';
            refill(board,i-1,j);
            refill(board,i+1,j);
            refill(board,i,j-1);
            refill(board,i,j+1);
            return ;
        }
        return ;
    }
    
public:
    void solve(vector<vector<char>>& board) {
        if(board.size()==0 || board[0].size()==0)
            return ;
        for(int i=0;i<board[0].size();++i){
            if(board[0][i]=='O')
                refill(board,0,i);
        }
        for(int i=0;i<board.size();++i){
            if(board[i][0]=='O')
                refill(board,i,0);
        }
        for(int i=0;i<board.size();++i){
            if(board[i][board[0].size()-1]=='O')
                refill(board,i,board[0].size()-1);
        }
        for(int i=0;i<board[0].size();++i){
            if(board[board.size()-1][i]=='O')
                refill(board,board.size()-1,i);
        }
        for(int i=0;i<board.size();++i){
            for(int j=0;j<board[0].size();++j){
                if(board[i][j]=='O')
                    board[i][j]='X';
                else if(board[i][j]=='-')
                    board[i][j]='O';
            }
        }
        
    }
};
