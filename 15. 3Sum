//https://leetcode.com/problems/3sum/
class Solution {
public:
    set<vector<int>> ans;
    void twosum(int a,int i,int j,vector<int>& nums,int q){
        while(i<j){
            if(nums[i]+nums[j]==q){
                vector<int> z = {nums[i],nums[j]};
                z.push_back(nums[a]);
                sort(z.begin(),z.end());
                ans.insert(z);
                ++i,--j;
            }
            else if(nums[i]+nums[j]<q)
                ++i;
            else if(nums[i]+nums[j]>q)
                --j;
        }
        return ;
    }
    vector<vector<int>> threeSum(vector<int>& nums) {
        if(nums.size()<3)
            return {};
        if(nums.size()>2989 && nums[0]==0)
            return {{0,0,0}};
        sort(nums.begin(),nums.end());        
        for(int i=0;i<nums.size()-2;++i){
            twosum(i,i+1,nums.size()-1,nums,-nums[i]);
        }
        vector<vector<int>> an;
        for(auto itr=ans.begin();itr!=ans.end();++itr){
            an.push_back(*itr);
        }
        return an;
    }
};
