//https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution{
	public:
		vector<vector<int>> zigzagLevelOrder(TreeNode* root){
            if(!root)
                return {};
			vector<vector<int>> ans;
			queue<TreeNode*> temp;
			temp.push(root);
			TreeNode* level=root;
			TreeNode* reserve;
			int l=0;
			while(!temp.empty()){
				reserve=temp.front();
				temp.pop();
				if(reserve==level){
					level=NULL;
					++l;
					ans.push_back({});
				}
				if(reserve->left && !level)
					level=reserve->left;
				if(reserve->right && !level)
					level=reserve->right;
				ans[l-1].push_back(reserve->val);
				if(reserve->left)
					temp.push(reserve->left);
				if(reserve->right)
					temp.push(reserve->right);
			}
			for(int i=1;i<ans.size();i+=2)
				reverse(ans[i].begin(),ans[i].end());
			return ans;
		}
};
