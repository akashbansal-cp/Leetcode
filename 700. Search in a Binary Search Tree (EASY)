//https://leetcode.com/problems/search-in-a-binary-search-tree/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
TreeNode* sol(TreeNode* root,int val){
    if(root==NULL)
        return NULL;
    else if(root->val==val)
        return root;
    else{
        TreeNode* l=sol(root->left,val);
        TreeNode* r=sol(root->right,val);
        if(l!=NULL)
            return l;
        else if(r!=NULL)
            return r;
        else
            return NULL;
    }
    return NULL;   
}
class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        return sol(root,val);
    }
};
