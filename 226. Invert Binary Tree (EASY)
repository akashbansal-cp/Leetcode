//https://leetcode.com/problems/invert-binary-tree/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        Solution sol;
        if(root==nullptr)
            return nullptr;
        if(root->left != nullptr || root->right != nullptr){
            swap(root->left,root->right);
            TreeNode* a=sol.invertTree(root->left);
            TreeNode* b=sol.invertTree(root->right);
            return root;
        }
        else
            return root;
    }
};
