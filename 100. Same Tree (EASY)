//https://leetcode.com/problems/same-tree/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool solve(TreeNode* p, TreeNode* q){
        bool z=0;
        if(p->val==q->val){
	        if(!p->left && !q->left)
		        z=1;
    	else if(p->left && q->left)
	    	z=solve(p->left,q->left);	
	    else
		    return 0;;
	    if(z && (!p->right && !q->right))
		    z=1;
	    else if(z && (p->right && q->right))
		    z=solve(p->right,q->right);
	    else
		    return 0;
	    if(z)
		    return 1;
	    else
		    return 0;
}
else 
	return 0;
return 0;
    }
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(!p){
            if(!q)
                return 1;
            else
                return 0;
        }
        if(!q){
            if(!p)
                return 1;
            else
                return 0;
        }
        if(p->val==q->val){
            return solve(p,q);
        }
        else
            return 0;
        return 0;
    }
};
